name: üöÄ Deploy GraphQL Service to AWS

on:
  push:
    paths:
      - 'Backend_uceShoes/productManagement/productSearchGraphQL/**'
    branches:
      - TestConectionProducts

jobs:
  build-and-push:
    name: üì¶ Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/graphql:latest \
            -f Backend_uceShoes/productManagement/productSearchGraphQL/Dockerfile \
            Backend_uceShoes/productManagement/productSearchGraphQL

          docker push ${{ secrets.DOCKER_USERNAME }}/graphql:latest

  deploy:
    name: üöÄ Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: üöÄ Connect to EC2 and Deploy GraphQL Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_GRAPHQL }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üîç Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo usermod -a -G docker $USER
            fi

            echo "üîç Checking if netcat (nc) is installed..."
            if ! command -v nc &> /dev/null; then
              echo "üì¶ Installing netcat..."
              sudo yum install -y nc
            fi

            echo "üõë Stopping and removing previous container..."
            sudo docker stop graphql || true
            sudo docker rm graphql || true

            echo "üßπ Removing old Docker images..."
            sudo docker image prune -af

            echo "üì• Pulling the latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/graphql:latest

            echo "üîç Checking if MySQL is reachable..."
            if ! nc -zv ${{ secrets.DB_HOST }} ${{ secrets.DB_PORT }}; then
              echo "‚ùå MySQL is not reachable. Deployment aborted."
              exit 1
            fi

            echo "üöÄ Running the new container..."
            sudo docker run -d \
              --name graphql \
              --restart=always \
              -p ${{ secrets.SERVER_PORT_GRAPHQL }}:${{ secrets.SERVER_PORT_GRAPHQL }} \
              -e DATABASE_URL="mysql+pymysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}" \
              -e GRAPHQL_PORT=${{ secrets.SERVER_PORT_GRAPHQL }} \
              ${{ secrets.DOCKER_USERNAME }}/graphql:latest

            echo "üîç Verifying deployment..."
            sleep 5
            if [ "$(sudo docker ps -q -f name=graphql)" ]; then
              echo "‚úÖ Deployment successful: GraphQL Service is running."
            else
              echo "‚ùå Deployment failed: Checking logs..."
              sudo docker logs graphql
              echo "‚ö†Ô∏è Checking Docker container status..."
              sudo docker ps -a
              exit 1
            fi