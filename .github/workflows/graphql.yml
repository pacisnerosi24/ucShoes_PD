name: CI/CD for GraphQL Service

on:
  push:
    paths:
      - 'Backend_uceShoes/productManagement/productSearchGraphQL/**'
    branches:
      - test
  pull_request:
    paths:
      - 'Backend_uceShoes/productManagement/productSearchGraphQL/**'
    branches: [ "QA", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout code
        uses: actions/checkout@v3

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üì¶ Build & Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/graphql:latest Backend_uceShoes/productManagement/productSearchGraphQL \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }}

          docker push ${{ secrets.DOCKER_USERNAME }}/graphql:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_GRAPHQL }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üîÑ Stopping previous container if it exists..."
            sudo docker stop graphql || true
            sudo docker rm graphql || true

            echo "üßπ Cleaning up old Docker images..."
            sudo docker image prune -af

            echo "üì• Pulling the latest image from Docker Hub..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/graphql:latest

            echo "üöÄ Running the new container..."
            sudo docker run -d --name graphql \
              --restart=always \
              -p ${{ secrets.SERVER_PORT_GRAPHQL }}:${{ secrets.SERVER_PORT_GRAPHQL }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              ${{ secrets.DOCKER_USERNAME }}/graphql:latest
              